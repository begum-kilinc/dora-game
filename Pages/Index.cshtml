@page
@model Game.Pages.IndexModel

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>


<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Logs[0].RecordDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Logs[0].RecordCount)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Logs[0].RecordMessage)
            </th>

        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Paged)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.RecordDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.RecordCount)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.RecordMessage)
                </td>


            </tr>
        }
    </tbody>
</table>
@{
    var prevDisabled = !Model.Paged.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.Paged.HasNextPage ? "disabled" : "";
}

<a asp-page="./Index"
   asp-route-pageIndex="@(Model.Paged.PageIndex - 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   class="btn btn-primary @prevDisabled">
    Previous
</a>
<a asp-page="./Index"

   asp-route-pageIndex="@(Model.Paged.PageIndex + 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   class="btn btn-primary @nextDisabled">
    Next
</a>
