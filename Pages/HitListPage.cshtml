@page
@model Game.Pages.HitListPageModel

@{
    ViewData["Title"] = "HitListPage";
}
@{
    List<SelectListItem> listItems = new List<SelectListItem>();
    listItems.Add(new SelectListItem
    {
        Text = "Head",
        Value = "1"
    });
    listItems.Add(new SelectListItem
    {
        Text = "Arm",
        Value = "2",
        Selected = true
    });
    listItems.Add(new SelectListItem
    {
        Text = "Leg",
        Value = "3"
    });
    listItems.Add(new SelectListItem
    {
        Text = "Trunk",
        Value = "4"
    });
    listItems.Add(new SelectListItem
    {
        Text = "Foot",
        Value = "5"
    });
    listItems.Add(new SelectListItem
    {
        Text = "Hand",
        Value = "6"
    });
}
<h1>HitListPage</h1>



    <table class="table">
        <thead>
            <tr>
                <th>
                    Shooter Nick Name
                </th>
                <th>
                    Dead Nick Name
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Hits[0].HitZone)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Hits[0].HitID)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Paged)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => Model.gamerinstance.Where(s => s.PlayerID == item.ShooterID).First().NickName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => Model.gamerinstance.Where(s => s.PlayerID == item.DeadID).First().NickName)
                    </td>
                    <td>
                        @Html.DropDownListFor(modelItem => item.HitZone, listItems)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.HitID)
                    </td>

                </tr>
            }
        </tbody>
    </table>
    @{
        var prevDisabled = !Model.Paged.HasPreviousPage ? "disabled" : "";
        var nextDisabled = !Model.Paged.HasNextPage ? "disabled" : "";
    }
    <a asp-page="./HitListPage"
       asp-route-pageIndex="@(Model.Paged.PageIndex - 1)"
       asp-route-currentFilter="@Model.CurrentFilter"
       class="btn btn-primary @prevDisabled">
        Previous
    </a>
    <a asp-page="./HitListPage"
       asp-route-pageIndex="@(Model.Paged.PageIndex + 1)"
       asp-route-currentFilter="@Model.CurrentFilter"
       class="btn btn-primary @nextDisabled">
        Next
    </a>
